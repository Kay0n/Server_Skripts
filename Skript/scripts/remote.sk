on load:
	clear {custom.active::*}
	# url - url for directory of file from root (has to be raw file)
	# path - directory of script folder from root
	set {url.script} to "https://raw.githubusercontent.com/Kay0n/plugins/master/Skript/scripts/"
	set {path.script} to "plugins/Skript/scripts/"
	


	



# downloads and reloads script from {url.script}
command /skload <text>:
	permission: remote.skload
	usage: /skload <script-name>
	description: pulls file from {url.script} to {path.script} and reloads script
	trigger:
		delete file "%{path.script}%%arg-1%.sk"
		download file from "%{url.script}%%arg-1%.sk" to file "%{path.script}%%arg-1%.sk"

	
		if player is set:
			make player run command "/sk reload %arg-1%" as op
		else:
			execute console command "/sk reload %arg-1%"





# deletes specified file (working dir is server root)
command /rm-file <text>:
	description: deletes file at specified path
	permission: remote.del
	usage: /rm-file <pathtofile>
	trigger:
		delete file arg-1
		send "[Skript-remote.sk] deleted file %arg-1%" to console

# downloads specified file from url (working dir is server root)
command /dl-file <text> <text>:
	description: downloads file from url at specified path
	permission: remote.download
	usage: /dl-file <raw_url> <path/to/file.ext>
	trigger:
		download file from arg-1 to file arg-2
		send "[Skript-remote.sk] donwloaded file from %arg-1% to %arg-2%" to console





command /custom <text> <text="empty">:
	permission: perm.empty
	usage: Use /custom help for a list of commands
	trigger:
		if arg-1 is "help":
			send "<yellow>help - displays this page" to player
			send "<yellow>class - lists item classes, click controls"
		else if arg-1 is "class":
			if arg-2 is "empty":
				send "<gold>Active Classes:"
				loop {custom.active::*}:
					send formatted "<cmd:/custom class %loop-value%><red>%loop-value%"

			else:
				send "<gold>Items:"
				set {_num} to 1
				loop {%arg-2%.list::*}:
					send formatted "<cmd:/custom give {%arg-2%.list::%{_num}%}><yellow>%name of loop-value%" to player
					add 1 to {_num}

		else if arg-1 is "give":
			evaluate "give player %arg-2%"




